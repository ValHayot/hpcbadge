name: Continuous Integration

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read

jobs:
  ci:
    strategy:
      matrix:
        include:
          - endpoint_uuid: '4ea5e1f2-cbdb-444b-98e7-b228df02965d'
            user_endpoint_config: '{ "WORKING_DIR": "/home/kamping"}'
            clone_endpoint_config: '{ "WORKING_DIR": "/home/kamping"}'
            
    runs-on: ubuntu-latest
    environment: hpcci

    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'
      - name: run Artifact1
        id: a1
        uses: globus-labs/correct@v1
        with:
          client_id: ${{ secrets.GLOBUS_COMPUTE_CLIENT_ID }}
          client_secret: ${{ secrets.GLOBUS_COMPUTE_CLIENT_SECRET }}
          endpoint_uuid: ${{ matrix.endpoint_uuid }}
          shell_cmd: "cd gc-action-temp/hpcbadge/artifact1 && bash 00_fetch_source.sh && bash 01_build.sh && bash 02_run_tests.sh"
          user_endpoint_config: ${{ matrix.user_endpoint_config }}
          clone_endpoint_config: ${{ matrix.clone_endpoint_config }}
      - name: Archive a1 output stdout
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: a1-stdout-${{ matrix.endpoint_uuid }}
          path: ${{ steps.a1.outputs.stdout }}
      - name: Archive a1 output stderr
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: a1-stderr-${{ matrix.endpoint_uuid }}
          path: ${{ steps.a1.outputs.stderr }}
      - name: run Artifact2
        id: a2
        uses: globus-labs/correct@v1
        with:
          client_id: ${{ secrets.GLOBUS_COMPUTE_CLIENT_ID }}
          client_secret: ${{ secrets.GLOBUS_COMPUTE_CLIENT_SECRET }}
          endpoint_uuid: ${{ matrix.endpoint_uuid }}
          shell_cmd: "cd gc-action-temp/hpcbadge/artifact2 && bash 00_fetch_source.sh && bash 01_build_benchmarks.sh && bash 02_count_loc.sh && bash 03_run_sorting.sh && bash 04_run_bfs.sh && 05_eval_sorting.sh && 06_eval_bfs.sh || true"
          user_endpoint_config: ${{ matrix.user_endpoint_config }}
          clone_endpoint_config: ${{ matrix.clone_endpoint_config }}
      - name: Archive a2 output stdout
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: a2-stdout-${{ matrix.endpoint_uuid }}
          path: ${{ steps.a2.outputs.stdout }}
      - name: Archive a2 output stderr
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: a2-stderr-${{ matrix.endpoint_uuid }}
          path: ${{ steps.a2.outputs.stderr }}
      - name: run Artifact3
        id: a3
        uses: globus-labs/correct@v1
        with:
          client_id: ${{ secrets.GLOBUS_COMPUTE_CLIENT_ID }}
          client_secret: ${{ secrets.GLOBUS_COMPUTE_CLIENT_SECRET }}
          endpoint_uuid: ${{ matrix.endpoint_uuid }}
          shell_cmd: "cd gc-action-temp/hpcbadge/artifact3 && bash 00_fetch_source.sh && bash 01_count_loc.sh || true"
          user_endpoint_config: ${{ matrix.user_endpoint_config }}
          clone_endpoint_config: ${{ matrix.clone_endpoint_config }}
      - name: Archive a3 output stdout
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: a3-stdout-${{ matrix.endpoint_uuid }}
          path: ${{ steps.a3.outputs.stdout }}
      - name: Archive a3 output stderr
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: a3-stderr-${{ matrix.endpoint_uuid }}
          path: ${{ steps.a3.outputs.stderr }}
      - name: run Artifact4
        id: a4
        uses: globus-labs/correct@v1
        with:
          client_id: ${{ secrets.GLOBUS_COMPUTE_CLIENT_ID }}
          client_secret: ${{ secrets.GLOBUS_COMPUTE_CLIENT_SECRET }}
          endpoint_uuid: ${{ matrix.endpoint_uuid }}
          shell_cmd: "cd gc-action-temp/hpcbadge/artifact4 && bash 00_fetch_source.sh && bash 01_build_benchmark.sh && bash 02_count_loc.sh && bash 03_run_benchmark.sh && bash 04_eval.sh || true"
          user_endpoint_config: ${{ matrix.user_endpoint_config }}
          clone_endpoint_config: ${{ matrix.clone_endpoint_config }}
      - name: Archive a4 output stdout
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: a4-stdout-${{ matrix.endpoint_uuid }}
          path: ${{ steps.a4.outputs.stdout }}
      - name: Archive a4 output stderr
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: a4-stderr-${{ matrix.endpoint_uuid }}
          path: ${{ steps.a4.outputs.stderr }}
      - name: run Artifact5
        id: a5
        uses: globus-labs/correct@v1
        with:
          client_id: ${{ secrets.GLOBUS_COMPUTE_CLIENT_ID }}
          client_secret: ${{ secrets.GLOBUS_COMPUTE_CLIENT_SECRET }}
          endpoint_uuid: ${{ matrix.endpoint_uuid }}
          shell_cmd: "cd gc-action-temp/hpcbadge/artifact5 && bash 00_fetch_source.sh && bash 01_time_build.sh && bash 02_binary_size.sh || true"
          user_endpoint_config: ${{ matrix.user_endpoint_config }}
          clone_endpoint_config: ${{ matrix.clone_endpoint_config }}
      - name: Archive a5 output stdout
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: a5-stdout-${{ matrix.endpoint_uuid }}
          path: ${{ steps.a5.outputs.stdout }}
      - name: Archive a5 output stderr
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: a5-stderr-${{ matrix.endpoint_uuid }}
          path: ${{ steps.a5.outputs.stderr }}
